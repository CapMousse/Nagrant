require "yaml"

root = `npm root -g`.gsub("\n","")

if File.directory?("node_modules/nagrant")
    root = "node_modules/nagrant"
elsif File.directory?("#{root}/nagrant")
    root = "#{root}/nagrant"
else
    puts "\u001b[1m\u001b[31mNagrant is not installed\u001b[0m\u001b[0m"
    exit
end

confDir = File.expand_path(root, File.dirname(__FILE__))

if File.file?("Nagrant.yml")
    settings = YAML.load_file("Nagrant.yml")
else
    puts "\u001b[1m\u001b[31mNagrant config file don't exists\u001b[0m\u001b[0m"
    exit
end

Vagrant.require_version ">= 1.8.4"

Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/trusty64"
    config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
    config.ssh.forward_agent = true

    config.vm.network :private_network, ip: settings["ip"] ||= "192.168.10.10"

    settings["ports"].each do |port|
        config.vm.network "forwarded_port", guest: port["from"], host: port["to"], auto_correct: true
    end

    config.vm.provider :virtualbox do |vm|
        vm.customize ["modifyvm", :id, "--memory", settings["memory"] ||= "2048"]
        vm.customize ["modifyvm", :id, "--cpus", settings["cpus"] ||= "1"]
        vm.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
        vm.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    end

    if settings.include?("folders")
        settings["folders"].each do |folder|
            config.vm.synced_folder folder["map"], folder["to"]

            if Vagrant.has_plugin?("vagrant-bindfs")
              config.bindfs.bind_folder folder["to"], folder["to"]
            end
        end
    end

    if settings["root"] && !settings.include?("folders")
        config.vm.synced_folder "./", settings["root"]

        if Vagrant.has_plugin?("vagrant-bindfs")
          config.bindfs.bind_folder settings["root"], settings["root"]
        end
    end

    config.vm.provision :shell, path: File.expand_path(confDir + "/scripts/setup.sh")

    if settings["mongo"]
        config.vm.provision :shell, path: File.expand_path(confDir + "/scripts/install-mongo.sh")
        config.vm.network "forwarded_port", guest: 27017, host: 27047, auto_correct: true
    end

    if settings["mysql"]
        config.vm.provision :shell, path: File.expand_path(confDir + "/scripts/install-mysql.sh")
        config.vm.network "forwarded_port", guest: 3306, host: 33060, auto_correct: true
    end

    if settings["redis"]
        config.vm.provision :shell, path: File.expand_path(confDir + "/scripts/install-redis.sh")
        config.vm.network "forwarded_port", guest: 6379, host: 63790, auto_correct: true
    end

    if File.file? "after.sh"
        config.vm.provision :shell, path: "after.sh", run: "always"
    end

    settings["node"].each do |node|
        params = node.include?("params") ? Hash[*node["params"]] : {}
        config.vm.provision :shell, path: File.expand_path(confDir + "/scripts/launch.sh"), args: [node["dir"], node["script"]], env: params, run: "always"
    end
end
